version: "3.9"

services:

#  user-info-service:
#    build: ./user-info-service/
#    ports: 
#      - "8000:8000"
  test-application:
    build: ./test-application/
    depends_on:
      "kafka" 
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment: 
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test-topic:1:1"



# Create topic and inspect it
# We can also create a copy at startup with the KAFKA_CREATE_TOPICS env variable
# bin/kafka-topics.sh --create --topic test-topic --bootstrap-server localhost:9092
# bin/kafka-topics.sh --describe --topic test-topic --bootstrap-server localhost:9092

# Start manually the container:

# First create a network:
# docker network create my_network
# docker run -p 2181:2181 -it --name zookeeper --net my_network wurstmeister/zookeeper
# docker run -p 9092:9092 --env-file ./env.list -it --name kafka --net my_network wurstmeister/kafka

# Use the confluent docker container:
# docker network create rmoff_kafka
# docker run --network=rmoff_kafka --rm --detach --name zookeeper -e ZOOKEEPER_CLIENT_PORT=2181 confluentinc/cp-zookeeper:5.5.0
# docker run --network=rmoff_kafka --rm --detach --name broker \
#           -p 9092:9092 \
#           -e KAFKA_BROKER_ID=1 \
#           -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \
#           -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
#           -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
#           confluentinc/cp-kafka:5.5.0